// <auto-generated />
using System;
using DatabaseProvider;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SpaceObjectsMigrations.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230713210110_initial_migration")]
    partial class initial_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Models.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Diameter")
                        .HasColumnType("real")
                        .HasColumnName("Diameter");

                    b.Property<DateTime>("DiscoveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DiscoveryDate");

                    b.Property<float>("Mass")
                        .HasColumnType("real")
                        .HasColumnName("Mass");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("Name");

                    b.Property<int>("PlanetTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StarId")
                        .HasColumnType("int");

                    b.Property<float>("SurfaceTemperature")
                        .HasColumnType("real")
                        .HasColumnName("SurfaceTemperature");

                    b.HasKey("Id");

                    b.HasIndex("PlanetTypeId");

                    b.HasIndex("StarId");

                    b.ToTable("Planet", (string)null);
                });

            modelBuilder.Entity("Core.Models.PlanetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("PlanetType", (string)null);
                });

            modelBuilder.Entity("Core.Models.Star", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Diameter")
                        .HasColumnType("real")
                        .HasColumnName("Diameter");

                    b.Property<DateTime>("DiscoveryDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DiscoveryDate");

                    b.Property<float>("Magnitude")
                        .HasColumnType("real")
                        .HasColumnName("Magnitude");

                    b.Property<float>("Mass")
                        .HasColumnType("real")
                        .HasColumnName("Mass");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("Name");

                    b.Property<int>("StarTypeId")
                        .HasColumnType("int");

                    b.Property<float>("Temperature")
                        .HasColumnType("real")
                        .HasColumnName("Temperature");

                    b.HasKey("Id");

                    b.HasIndex("StarTypeId");

                    b.ToTable("Star", (string)null);
                });

            modelBuilder.Entity("Core.Models.StarHasAbsoluteMagnitude", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("AbsoluteMagnitude")
                        .HasColumnType("real")
                        .HasColumnName("AbsoluteMagnitude");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<int>("StarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("StarId");

                    b.ToTable("StarHasAbsoluteMagnitude", (string)null);
                });

            modelBuilder.Entity("Core.Models.StarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("StarType", (string)null);
                });

            modelBuilder.Entity("Core.Models.Planet", b =>
                {
                    b.HasOne("Core.Models.PlanetType", "PlanetType")
                        .WithMany("Planets")
                        .HasForeignKey("PlanetTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Core.Models.Star", "Star")
                        .WithMany("Planets")
                        .HasForeignKey("StarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlanetType");

                    b.Navigation("Star");
                });

            modelBuilder.Entity("Core.Models.Star", b =>
                {
                    b.HasOne("Core.Models.StarType", "StarType")
                        .WithMany("Stars")
                        .HasForeignKey("StarTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("StarType");
                });

            modelBuilder.Entity("Core.Models.StarHasAbsoluteMagnitude", b =>
                {
                    b.HasOne("Core.Models.Star", "Star")
                        .WithMany("AbsoluteMagnitudes")
                        .HasForeignKey("StarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Star");
                });

            modelBuilder.Entity("Core.Models.PlanetType", b =>
                {
                    b.Navigation("Planets");
                });

            modelBuilder.Entity("Core.Models.Star", b =>
                {
                    b.Navigation("AbsoluteMagnitudes");

                    b.Navigation("Planets");
                });

            modelBuilder.Entity("Core.Models.StarType", b =>
                {
                    b.Navigation("Stars");
                });
#pragma warning restore 612, 618
        }
    }
}
